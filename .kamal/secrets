# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.

# Option 1: Read secrets from the environment
#KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD
KAMAL_REGISTRY_PASSWORD=$(grep -E "^KAMAL_REGISTRY_PASSWORD=" backend/.env-prod | cut -d'=' -f2)

SERVICE_NAME=$(grep -E "^SERVICE_NAME=" backend/.env-prod | cut -d'=' -f2)
DOCKER_USERNAME=$(grep -E "^DOCKER_USERNAME=" backend/.env-prod | cut -d'=' -f2)
DOCKER_IMAGE_NAME=$(grep -E "^DOCKER_IMAGE_NAME=" backend/.env-prod | cut -d'=' -f2)

# Option 2: Read secrets via a command
# RAILS_MASTER_KEY=$(cat config/master.key)

# Option 3: Read secrets via kamal secrets helpers
# These will handle logging in and fetching the secrets in as few calls as possible
# There are adapters for 1Password, LastPass + Bitwarden
#
# SECRETS=$(kamal secrets fetch --adapter 1password --account my-account --from MyVault/MyItem KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
# KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD $SECRETS)
# RAILS_MASTER_KEY=$(kamal secrets extract RAILS_MASTER_KEY $SECRETS)

# ---

### frontend ###

VITE_GIT_COMMIT=$(git rev-parse HEAD)
VITE_BACKEND_HOST=$(grep -E "^VITE_BACKEND_HOST=" frontend/.env-prod | cut -d'=' -f2)


### backend ###

GIT_COMMIT=$(git rev-parse HEAD)

DB_USER=$(grep -E "^DB_USER=" backend/.env-prod | cut -d'=' -f2)
DB_DATABASE=$(grep -E "^DB_DATABASE=" backend/.env-prod | cut -d'=' -f2)
DB_PASSWORD=$(grep -E "^DB_PASSWORD=" backend/.env-prod | cut -d'=' -f2)
DB_HOST=$(grep -E "^HOST=" backend/.env-prod | cut -d'=' -f2)

FRONTEND_HOSTNAME=$(grep -E "^FRONTEND_HOSTNAME=" backend/.env-prod | cut -d'=' -f2)
